/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "swe_keys.h"

&lt {
    quick-tap-ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <200>;
        };
    };        

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&none           &kp Q       &kp W         &kp E         &kp R        &kp T             &kp Y  &kp U                    &kp I         &kp O       &kp P          &kp LBKT
&kp LEFT_SHIFT  &hm LCMD A  &hm ALT S     &hm LSHIFT D  &hm LCTRL F  &kp G             &kp H  &hm RIGHT_CONTROL J      &hm RSHFT K   &hm RALT L  &hm RGUI SEMI  &kp SQT
&kp LCTRL       &kp Z       &kp X         &kp C         &kp V        &kp B             &kp N  &kp M                    &kp COMMA     &kp DOT     &kp FSLH       &none
                                          &lt 1 TAB     &kp ENTER           &kp SPACE         &lt 2 BACKSPACE          &lt 3 ESCAPE
            >;
        };

        num {
            bindings = <
&none  &kp N1       &kp N2  &kp N3         &kp N4        &kp N5          &kp N6  &kp N7        &kp N8        &kp N9        &kp N0     &none
&none  &hm LCMD N6  &hm N7  &hm LSHIFT N7  &hm LCTRL N8  &kp N9          &none   &hm RCTRL N4  &hm RSHFT N5  &hm RALT N6   &kp RGUI   &none
&none  &none        &none   &none          &none         &none           &none   &kp N7        &kp N8        &kp N9        &none      &none
                            &none          &none                 &trans          &kp N0        &kp N0
            >;
        };  

        sym {
            bindings = <
&none  &kp SE_DQT       &kp SE_AT         &kp SE_EQUAL        &kp SE_AMPS                  &kp SE_BSLH   &kp SE_LPAR        &kp SE_RPAR         &kp SE_PIPE        &kp SE_QMARK      &kp SE_PLUS      &none
&none  &hm LGUI SE_SQT  &hm LALT SE_STAR  &hm LSHIFT SE_DLLR  &hm LCTRL SE_EXCL            &kp SE_TILDE  &hm RCTRL SE_LBKT  &hm RSHIFT SE_RBKT  &hm RALT SE_EQUAL  &hm RGUI SE_PIPE  &kp SE_MINUS     &kp SE_GRAVE
&none  &kp SE_PRCNT     &kp SE_HASH       &kp SE_CARET        &kp SE_DLLR                  &kp SE_MINUS  &kp SE_LBRC        &kp SE_RBRC         &kp SE_LT          &kp SE_GT         &kp SE_UNDER     &none
                        &kp SLASH         &kp SE_FSLH                          &kp SPACE                  &mo 4        &mo 3
            >;
        };

        nav {
            bindings = <
&kp C_VOLUME_UP    &kp F1   &kp F2   &kp F3  &kp F4  &kp F5             &kp PRINTSCREEN  &none       &kp HOME  &kp PG_UP   &kp UP    &kp PG_DN   
&kp C_VOLUME_DOWN  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10            &none            &none       &kp END   &kp LEFT    &kp DOWN  &kp RIGHT   
&kp C_MUTE         &kp F11  &kp F12  &none   &none   &none              &none            &none       &none     &kp C_PREV  &kp C_PP  &kp C_NEXT  
                                     &trans  &trans           &kp SPACE                  &mo 2       &trans
            >;
        };

        set {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4           &none          &none         &none         &none         &none         &none
&none  &bt BT_CLR    &none         &none         &none         &bt BT_CLR_ALL         &studio_unlock &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none                  &sys_reset     &none         &none         &none         &none         &none
                                   &none         &none                         &none                 &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };
};
